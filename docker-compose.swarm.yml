version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ballarat_tools
      POSTGRES_USER: ballarat_user
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal
    ports:
      - "5432:5432"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Redis Cache
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass-file /run/secrets/redis_password
    secrets:
      - redis_password
    volumes:
      - redis_data:/data
    networks:
      - internal
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Backend API
  backend:
    image: ${DOCKER_USER:-anthonyrawlins}/ballarat-tools-backend:latest
    environment:
      NODE_ENV: production
      CORS_ORIGIN: https://tools.home.deepblack.cloud
      PORT: 8000
      API_VERSION: v1
    secrets:
      - jwt_secret
      - stripe_secret_key
      - db_password
      - redis_password
    networks:
      - tengig
      - internal
    depends_on:
      - db
      - redis
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (Next.js)
  frontend:
    image: ${DOCKER_USER:-anthonyrawlins}/ballarat-tools-frontend:latest
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: https://tools.home.deepblack.cloud/api
      NEXT_PUBLIC_SITE_URL: https://tools.home.deepblack.cloud
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY_FILE: /run/secrets/stripe_publishable_key
    secrets:
      - stripe_publishable_key
    networks:
      - tengig
      - internal
    depends_on:
      - backend
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
      labels:
        # Traefik configuration
        - traefik.enable=true
        - traefik.docker.network=tengig
        
        # Frontend service - HTTPS with Let's Encrypt
        - traefik.http.routers.tools-frontend.rule=Host(`tools.home.deepblack.cloud`)
        - traefik.http.routers.tools-frontend.entrypoints=web-secured
        - traefik.http.routers.tools-frontend.tls.certresolver=letsencryptresolver
        - traefik.http.services.tools-frontend.loadbalancer.server.port=3000
        - traefik.http.services.tools-frontend.loadbalancer.passhostheader=true
        
        # API Backend routing - HTTPS with Let's Encrypt
        - traefik.http.routers.tools-api.rule=Host(`tools.home.deepblack.cloud`) && PathPrefix(`/api`)
        - traefik.http.routers.tools-api.entrypoints=web-secured
        - traefik.http.routers.tools-api.tls.certresolver=letsencryptresolver
        - traefik.http.routers.tools-api.service=tools-backend
        - traefik.http.services.tools-backend.loadbalancer.server.port=8000
        - traefik.http.services.tools-backend.loadbalancer.passhostheader=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s


networks:
  tengig:
    external: true
  internal:
    driver: overlay
    attachable: true

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

secrets:
  db_password:
    file: ./secrets/db_password.txt
  redis_password:
    file: ./secrets/redis_password.txt
  jwt_secret:
    file: ./secrets/jwt_secret.txt
  stripe_secret_key:
    file: ./secrets/stripe_secret_key.txt
  stripe_publishable_key:
    file: ./secrets/stripe_publishable_key.txt